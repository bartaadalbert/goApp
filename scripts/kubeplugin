#!/bin/bash

#colors
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'

NAMESPACE=${1:-kube-system}
RESOURCE_TYPE=${2:-po}
COMMAND=${3:-top}

# Check command  top || get
if [[ "$COMMAND" == "top" ]]; then
  # Retrieve resource usage statistics from Kubernetes, kubectl top po -n default NAME CPU(cores) MEMORY(bytes)   
  kubectl top $RESOURCE_TYPE -n $NAMESPACE | tail -n +2 | while read line
  do
    # Extract CPU and memory usage from the output
    NAME=$(echo $line | awk '{print $1}')
    CPU=$(echo $line | awk '{print $2}')
    MEMORY=$(echo $line | awk '{print $3}')

    # Output the statistics to the console
    if [[ $? -eq 0 ]]; then
      echo -e "$GREEN Resource: $RESOURCE_TYPE, Namespace: $NAMESPACE, Name: $NAME, CPU: $CPU, Memory: $MEMORY"
    else
      echo -e "$RED Error: Failed to retrieve resource statistics."
    fi
  done
elif [[ "$COMMAND" == "get" ]]; then
  # Retrieve resource usage statistics from Kubernetes
  kubectl get $RESOURCE_TYPE -n $NAMESPACE | tail -n +2 | while read line
  do
    # Extract  kubectl get po -n default | NAME READY STATUS RESTARTS AGE
    NAME=$(echo $line | awk '{print $1}')
    READY=$(echo $line | awk '{print $2}')
    STATUS=$(echo $line | awk '{print $3}')
    RESTARTS=$(echo $line | awk '{print $4}')
    AGE=$(echo $line | awk '{print $5}')

     # Output the information to the console
    if [[ $? -eq 0 ]]; then
      echo -e "$GREEN Resource: $RESOURCE_TYPE, Namespace: $NAMESPACE, NAME: $NAME, READY: $READY, STATUS: $STATUS, RESTARTS: $RESTARTS, AGE: $AGE"
    else
      echo -e "$RED Error: Failed to retrieve resource information."
    fi
  done
else
  # If the command not found
  echo -e "$RED Error: Command $COMMAND cant be use, please use top or get"
fi